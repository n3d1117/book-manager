<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>it.ned</groupId>
    <artifactId>book-manager</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- Properties -->
    <properties>
        <!-- Set UTF-8 encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Use Java 8 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!-- Dependencies versions -->
        <junit.version>4.13</junit.version>
        <mockito.version>3.5.10</mockito.version>
        <log4j.version>2.13.3</log4j.version>
        <assertj-swing.version>3.9.2</assertj-swing.version>
        <mongo-java.version>3.12.7</mongo-java.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <testcontainers.version>1.14.3</testcontainers.version>

        <!-- Plugin versions -->
        <jacoco.version>0.8.5</jacoco.version>
        <coveralls.version>4.3.0</coveralls.version>
        <pitest.version>1.5.2</pitest.version>
        <sonarqube.version>3.7.0.1746</sonarqube.version>
        <exec-maven.version>3.0.0</exec-maven.version>

        <!-- Make Sonar track integration tests too -->
        <sonar.junit.reportPaths>
            ${project.build.directory}/surefire-reports,
            ${project.build.directory}/failsafe-reports
        </sonar.junit.reportPaths>

        <!-- Exclude classes from Sonar Code Coverage -->
        <sonar.coverage.exclusions>
            **/Main.*,
            **/model/*.*,
            **/repository/mongo/MongoRepositoryFactory.*
        </sonar.coverage.exclusions>

    </properties>

    <!-- Dependencies -->
    <dependencies>

        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mockito -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Log4j -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- AssertJ Swing -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-swing-junit</artifactId>
            <version>${assertj-swing.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mongo Java API -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>${mongo-java.version}</version>
        </dependency>

        <!-- Logback (required to see Mongo Java Driver logs)-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>

        <!-- Testcontainers -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mongodb</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>

        <!-- Plugin Management -->
        <pluginManagement>
            <plugins>

                <!-- JaCoCo Plugin -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/Main.*</exclude>
                            <exclude>**/model/*.*</exclude>
                            <exclude>**/repository/mongo/MongoRepositoryFactory.*</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!-- Coveralls Plugin -->
                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>${coveralls.version}</version>
                    <dependencies>
                        <!-- Explicit dep on jaxb-api to avoid problems with JDK9 and later,
                        until a new version of coveralls-maven-plugin is released.
                        See also https://github.com/trautonen/coveralls-maven-plugin/issues/112-->
                        <dependency>
                            <groupId>javax.xml.bind</groupId>
                            <artifactId>jaxb-api</artifactId>
                            <version>2.3.1</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- PIT Mutation Testing Plugin -->
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest.version}</version>
                    <configuration>
                        <excludedClasses>
                            <param>it.ned.bookmanager.model.*</param>
                            <param>it.ned.bookmanager.view.*</param>
                            <param>it.ned.bookmanager.repository.mongo.MongoRepositoryFactory</param>
                        </excludedClasses>
                        <targetTests>
                            <param>*Test</param>
                        </targetTests>
                        <mutators>
                            <mutator>STRONGER</mutator>
                        </mutators>
                        <mutationThreshold>98</mutationThreshold>
                    </configuration>
                </plugin>

                <!-- Sonar Plugin -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonarqube.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <!-- Plugins -->
        <plugins>

            <!-- Maven Assembly Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <mainClass>it.ned.bookmanager.Main</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Exec Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven.version}</version>
                <executions>
                    <execution>
                        <id>run-jar-with-dependencies</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-jar</argument>
                                <argument>${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <!-- Profiles -->
    <profiles>

        <!-- JaCoCo - jacoco-report profile, used on CI to generate the report used by Coveralls -->
        <profile>
            <id>jacoco-report</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- JaCoCo - jacoco-check profile, used locally to check for 100% code coverage -->
        <profile>
            <id>jacoco-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>jacoco-check</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                    <goal>report</goal>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule>
                                            <element>PACKAGE</element>
                                            <limits>
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>1.00</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- PIT Mutation Testing Profile -->
        <profile>
            <id>mutation-testing</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>